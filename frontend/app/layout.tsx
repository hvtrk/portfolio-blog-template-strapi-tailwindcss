import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { Navbar } from "@/components/navbar";
import { ThemeProvider } from "@/components/theme-provider";

import { getStrapiMedia, getStrapiURL } from "../lib/utils";
import { fetchAPI } from "../lib/api";

import "../styles/globals.css";
import { GlobalResponse } from "@/types/globals";
import Footer from "@/components/footer";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// const FALLBACK_SEO = {
//   title: "Strapi Starter Next Blog",
//   description: "Strapi Starter Next Blog",
// };

async function getGlobal(): Promise<GlobalResponse> {
  const token = process.env.NEXT_PUBLIC_STRAPI_API_TOKEN;

  if (!token)
    throw new Error("The Strapi API Token environment variable is not set.");

  const path = `/global`;
  const options = { headers: { Authorization: `Bearer ${token}` } };

  const urlParamsObject = {
    populate: {
      defaultSeo: {
        populate: "shareImage",
      },
      favicon: true,
      footer: {
        populate: {
          footerLogo: {
            populate: "logoImg",
          },
          menuLinks: true,
          legalLinks: true,
          socialLinks: true,
          categories: true,
        },
      },
    },
  };
  // [
  //   // "navbar.links",
  //   // "navbar.navbarLogo.logoImg",
  // ],

  const response = await fetchAPI(path, urlParamsObject, options);
  return response;
}

// export async function generateMetadata(): Promise<Metadata> {
//   const meta = await getGlobal();

//   if (!meta.data) return FALLBACK_SEO;

//   const { metadata, favicon } = meta.data;
//   const { url } = favicon.data.attributes;

//   return {
//     title: metadata.metaTitle,
//     description: metadata.metaDescription,
//     icons: {
//       icon: [new URL(url, getStrapiURL())],
//     },
//   };
// }

type RootLayoutProps = {
  children: React.ReactNode;
};

export default async function RootLayout({ children }: RootLayoutProps) {
  const global = await getGlobal();
  // TODO: CREATE A CUSTOM ERROR PAGE
  if (!global.data) return null;

  const { footer } = global.data;

  // const navbarLogoUrl = getStrapiMedia(
  //   navbar.navbarLogo.logoImg.data.attributes.url
  // );

  const footerLogoUrl = getStrapiMedia(footer.footerLogo.logoImg.url);

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <div className="min-h-screen bg-background flex flex-col p-4">
            <div className="w-full max-w-4xl mx-auto max-h-1/12">
              <Navbar />
            </div>
            <main className="flex-1 flex">{children}</main>
            <Footer
              logoUrl={footerLogoUrl}
              logoText={footer.footerLogo.logoText}
              menuLinks={footer.menuLinks}
              categoryLinks={footer.categories}
              legalLinks={footer.legalLinks}
              socialLinks={footer.socialLinks}
            />
          </div>
        </ThemeProvider>
      </body>
    </html>
  );
}
